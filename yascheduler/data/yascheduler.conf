[db]
user =
password =
database =
host =
port = 5432

[local]
# data_dir = ./data
# tasks_dir = %(data_dir)s/tasks
# keys_dir = %(data_dir)s/keys
engines_dir = %(data_dir)s/engines

[remote]
# data_dir = ./data
# tasks_dir = %(data_dir)s/tasks
# engines_dir = %(data_dir)s/engines
user = root

[clouds]

[engine.pcrystal]
platforms = debian
platform_packages = wget libibverbs-dev make gcc build-essential gfortran
extra_command = wget https://download.open-mpi.org/release/open-mpi/v2.1/openmpi-2.1.0.tar.gz && tar xvf openmpi-2.1.0.tar.gz && cd openmpi-2.1.0 && ./configure --prefix=/usr/local/openmpi && make all && make install && echo 'export PATH="/usr/local/openmpi/bin:$PATH"' >> ~/.bashrc && echo 'export LD_LIBRARY_PATH="/usr/local/openmpi/lib:$LD_LIBRARY_PATH"' >> ~/.bashrc && source ~/.bashrc
deploy_local_files = Pcrystal
spawn = cp {task_path}/INPUT OUTPUT && mpirun -np {ncpus} --allow-run-as-root -wd {task_path} {engine_path}/Pcrystal >> OUTPUT 2>&1
check_pname = Pcrystal
sleep_interval = 6
input_files =
    INPUT
    fort.34
output_files =
    INPUT
    fort.34
    OUTPUT
    fort.9
    fort.87

[engine.dummy]
platforms = debian-10 debian-11
deploy_local_files = dummyengine
spawn = {engine_path}/dummyengine *
# check_cmd = ps ax -ocomm= | grep -q dummyengine
check_pname = dummyengine
sleep_interval = 1
input_files = 1.input 2.input 3.input
output_files = 1.input 2.input 3.input 1.input.out 2.input.out 3.input.out

[engine.dummy-win]
platforms = windows-10 windows-11
deploy_local_archive = dummy.zip
spawn = {engine_path}\dummy *
check_pname = dummy
# check_cmd = get-process -name dummy
sleep_interval = 10
input_files = 1.input 2.input 3.input
output_files = 1.input 2.input 3.input 1.input.out 2.input.out 3.input.out

[engine.gulp]
platforms = debian
deploy_local_files = gulp
spawn = {engine_path}/gulp < INPUT > OUTPUT
check_pname = gulp
input_files = INPUT
output_files = INPUT OUTPUT
